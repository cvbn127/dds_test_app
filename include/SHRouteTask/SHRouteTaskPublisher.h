// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ImagePublisher.h
 * This header file contains the declaration of the publisher functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#pragma once

#include <fastrtps/fastrtps_fwd.h>
#include <fastrtps/publisher/PublisherListener.h>

#include "RouteTaskPubSubTypes.h"

class SHRouteTaskPublisher
{
public:
	SHRouteTaskPublisher(eprosima::fastrtps::Participant *participant = nullptr);
	virtual ~SHRouteTaskPublisher();
	bool init(int rate, const std::string &topic_name = "sh_route_task", const std::string &profile_name = "route-task-pub-profile");
	void run();
	void publish(const sh_chassis_msgs::msg::RouteTask &msg);
	void update_message(const sh_chassis_msgs::msg::RouteTask &msg);

private:
	eprosima::fastrtps::Participant *mp_participant;
	eprosima::fastrtps::Publisher *mp_publisher;

	int m_rate;
	bool should_delete_participant = false;
	bool is_type_registred = false;

	sh_chassis_msgs::msg::RouteTask latest_message;

	class PubListener : public eprosima::fastrtps::PublisherListener
	{
	public:
		PubListener() : n_matched(0){};
		~PubListener(){};
		void onPublicationMatched(eprosima::fastrtps::Publisher* pub,eprosima::fastrtps::rtps::MatchingInfo& info);
		int n_matched;
	} m_listener;
	sh_chassis_msgs::msg::RouteTaskPubSubType myType;
};
